Reuse through Inheritance:
----------------------------------
Multiple Inheritance is not allowed in Java. A Class can have only 1 direct Parent.

Strings:
-------------------
Do not create String using new String().
String a = "xxx"; is the recommended approach.

Factory Method Pattern:
-------------------------
Factory methods hide the use of constructor.

Invoker can remain Subtype unaware.

public class ProductFactory {

	public Product createProduct(String productType) {
		if("CAR".equals(productType)) {
			return new Car();
		}
		return new Product();
	}
}

java Interfaces:
-----------------------
All methods are public, abstract
No Instance Variables. Only public static final constants.
Interfaces can solve multiple Inheritance problem. A class can implement multiple Interfaces., but can extend only 1 class.

Exception: private/static/default concrete methods are allowed in Interfaces.

Functional Interface: (Recommended approach for designing Interface)
--------------------------
Has only 1 abstract method.






