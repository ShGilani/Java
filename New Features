Java 10: Local Variable Type Inference
--------------------------------------------
There are cases when Java compiler can guess what a variable type is for you. For example, if it's a local variable, and you assign some value to it, well, the compiler looks at what are you assigning. And it says here, oh, well, you're assigning string, so that variable surely is a type of string.

public void performCaculation(int param){
  var value1 = "hello"; //infers String
  var value2 = param; //infers int
}

Or in this particular case, that value2 variable-- I'm assigning this param. Param is explicitly declared to be type of int. So again, the compiler has no problem unambiguously guessing that value2 really is type of int. So all you're doing here is that you just avoid typing yourself what the type is. And instead, you're essentially asking a compiler to guess it for you.

Varargs/ Variable number of arguments (3 dots):
----------------------------------------
public class Order {

	public static void main(String[] args) {
     new Order().performOp(111, "Mr A","Mr B");
     new Order().performOp(111, "Mr X","Mr Y","Mr Z");
     new Order().performOp(111, "Mr P");
	}

	public void performOp(int trainingID, String... participantNames) {
		switch (participantNames.length) {

		case 1: {
			System.out.println(participantNames[0] + " is confirmed.");
			System.out.println("some more lines of code...");
			break;
		}
		case 2: {
			System.out.println(participantNames[0] + " and " + participantNames[1] + " is confirmed.");
			System.out.println("some more lines of code...");
			break;
		}
		default: {
			System.out.println("Many Participants");
			System.out.println("some more lines of code...");
		}
		}
	}
}
